<%@ val regInfo: (String, Long, Long) %>

<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>Genome visualization for ADAM</title>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8">
    </script>
    <style>
        body { font: 12px Arial;}
        .axis path,
        .axis line {
        fill: none;
        stroke: black;
        shape-rendering: crispEdges;
        }
        .axis text {
        font-family: sans-serif;
        font-size: 11px;
        }
        div.tooltip {
        position: absolute;
        text-align: center;
        width: 230px;
        height: 10px;
        padding: 2px;
        font: 12px sans-serif;
        background: lightsteelblue;
        border: 0px;
        border-radius: 8px;
        pointer-events: none;
        }
    </style>
</head>
<body>
    <h1>Genome visualization for ADAM</h1>
    <h2>Welcome! The current reference region is ${regInfo._1}: from ${regInfo._2} to ${regInfo._3}</h2>
            <span id="moveLeft">
                <input name="Move left button"
                       type="button"
                       value="LEFT"
                       onclick="moveLeft()"/>
            </span>
            <span id="zoomIn">
                <input name="Zoom in button"
                       type="button"
                       value="IN"
                       onclick="zoomIn()"/>
            </span>
            <span id="zoomOut">
                <input name="Zoom out button"
                       type="button"
                       value="OUT"
                       onclick="zoomOut()"/>
            </span>
            <span id="moveRight">
                <input name="Move right button"
                       type="button"
                       value="RIGHT"
                       onclick="moveRight()"/>
            </span>
    <br>
    <script>
        // Set the dimensions of the canvas
        var margin = {bottom: 20},
        width = 410,
        height = 420;

        // Create the SVG viewport
        var svgContainer = d3.select("body").append("svg")
                                            .attr("width", width)
                                            .attr("height", height);

        d3.json("/reads/${regInfo._1}?start=${regInfo._2}&end=${regInfo._3}", function(error, data) {
            data.forEach(function(d) {
                d.readName = d.readName;
                d.x = +d.x;
                d.y = +d.y;
                d.w = +d.w;
                d.h = +d.h;
            });

            // Add the rectangles
            svgContainer.append("g")
                        .selectAll("rect")
                        //.data(data)
                        .data(Reads)
                        .enter()
                        .append("rect")
                        .attr("x", (function(d) { return d.x; }))
                        .attr("y", (function(d) { return d.y; }))
                        .attr("width", (function(d) { return d.w; }))
                        .attr("height", (function(d) { return d.h; }))
                        .attr("fill", "blue")
                        .on("mouseover", function(d) {
                                            div.transition()
                                            .duration(200)
                                            .style("opacity", .9);
                                            div .html(d.readName)
                                            .style("left", (d3.event.pageX) + "px")
                                            .style("top", (d3.event.pageY - 28) + "px");
                                        })
                        .on("mouseout", function(d) {
                                            div.transition()
                                            .duration(500)
                                            .style("opacity", 0);
                                        });
        })

        // Create the scale for the axis
        var axisScale = d3.scale.linear()
                                .domain([${regInfo._2}, ${regInfo._3}])
                                .range([0, 400]);

        // Create the axis
        var xAxis = d3.svg.axis()
                       .scale(axisScale)
                       .ticks(5);

        // Add the axis to the container
        svgContainer.append("g")
                    .attr("class", "axis")
                    .attr("transform", "translate(0," + (height-margin.bottom) + ")")
                    .call(xAxis);

        // Try to move right
        function moveLeft() {
            alert("Trying to move left")
        }

        // Try to move right
        function moveRight() {
            alert("Trying to move right")
        }

        // Try to move right
        function zoomIn() {
            alert("Trying to zoom in")
        }

        // Try to zoom out
        function zoomOut() {
            alert("Trying to zoom out")
        }

        // Hover box for reads
        var div = d3.select("body")
                    .append("div")
                    .attr("class", "tooltip")
                    .style("opacity", 0);
    </script>
</body>
</html>